{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Documents\\\\GitHub\\\\mettleAI-Front-end-Interview\\\\mettleAI-Front-end-Interview\\\\src\\\\components\\\\Card.js\";\nimport React, { Component } from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport CakeIcon from '@material-ui/icons/Cake';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport EmailIcon from '@material-ui/icons/Email';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { withStyles } from '@material-ui/core/styles';\nconst styles = {\n  root: {\n    paddingLeft: \"0px\",\n    display: \"flex\",\n    maxHeight: \"48px\",\n    minHeight: \"48px\",\n    \"&$expanded\": {\n      maxHeight: \"48px\",\n      minHeight: \"48px\"\n    }\n  },\n  content: {\n    margin: \"0px\",\n    padding: \"0px\",\n    minHeight: \"48px\"\n  },\n  expanded: {\n    marginTop: \"0px\"\n  },\n  container: {\n    margin: \"20px 0px 20px 0px\",\n    borderRadius: \"4px\"\n  }\n};\nconst colours = [\"#25A575\", \"#2595A5\", \"#3A719B\", \"#254B7A\", \"#142B58\"];\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = address => {\n      var temp = {};\n      temp.target = {};\n      temp.target.placeholder = \"Address\";\n      temp.target.value = address;\n      this.updateData(temp);\n      this.setState({\n        address: address\n      });\n    };\n\n    this.handleSelect = address => {\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => console.log('Success', latLng)).catch(error => console.error('Error', error));\n    };\n\n    this.onExpandChange = (event, expanded) => {\n      this.setState({\n        expanded: expanded\n      });\n      console.log(this.state.formData.expanded);\n\n      if (expanded === true) {\n        document.getElementsByClassName(\"panelcard-icon\")[this.props.colour].style.borderBottomLeftRadius = \"0px\";\n      } else {\n        document.getElementsByClassName(\"panelcard-icon\")[this.props.colour].style.borderBottomLeftRadius = \"4px\";\n      }\n    };\n\n    this.state = {\n      autocomplete: [],\n      address: \"\",\n      data: {\n        firstName: \"\",\n        lastName: \"\",\n        dateOfBirth: \"\",\n        contactLanguage: \"\",\n        phone: \"\",\n        email: \"\",\n        address: \"\",\n        notesReason: \"\"\n      }\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.formData !== prevState.data) {\n      return {\n        data: nextProps.formData,\n        address: nextProps.formData.address\n      };\n    } else return null;\n  }\n\n  updateData(e) {\n    var field = e.target.placeholder.replace(/\\s/g, '');\n    var newData = e.target.value;\n    var data = this.state.data;\n    const possibilities = [\"FirstName\", \"LastName\", \"DateofBirth\", \"ContactLanguage\", \"Phone\", \"Email\", \"Address\", \"Notes/Reason\"]; //console.log(field)\n\n    console.log(data);\n\n    if (possibilities.includes(field)) {\n      for (let [key, value] of Object.entries(data)) {\n        if (key.toLowerCase() == field.toLowerCase()) {\n          console.log(\"hi\");\n          console.log(newData);\n          data[key] = newData;\n        }\n\n        if (field.toLowerCase() == \"notes/reason\") {\n          data.notesReason = newData;\n        }\n      }\n    } //this.setState({data : data})\n\n\n    console.log(data);\n    this.props.updateForms(data, this.props.colour);\n  }\n\n  test(e) {\n    console.log(e.target);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(ExpansionPanel, {\n      square: false,\n      className: classes.container,\n      defaultExpanded: this.props.formData.expanded,\n      onChange: this.onExpandChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ExpansionPanelSummary, {\n      expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 30\n        }\n      }),\n      \"aria-controls\": \"panel1a-content\",\n      classes: {\n        root: classes.root,\n        content: classes.content,\n        expanded: classes.expanded\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-icon\",\n      style: {\n        background: colours[this.props.colour]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, this.props.colour + 1), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, this.props.formData.firstName || this.props.formData.lastName ? this.props.formData.firstName + \" \" + this.props.formData.lastName : \"New Referral\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-filler\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"delete\",\n      colour: this.props.colour,\n      onClick: () => this.props.delete(this.props.colour),\n      onFocus: event => event.stopPropagation(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(ExpansionPanelDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"panelcard-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      value: this.props.formData.firstName,\n      label: \"required\",\n      placeholder: \"First Name\",\n      fullWidth: true,\n      onChange: e => this.updateData(e),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(AccountCircle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 41\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      value: this.props.formData.lastName,\n      required: true,\n      label: \"required\",\n      placeholder: \"Last Name\",\n      fullWidth: true,\n      onChange: e => this.updateData(e),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(AccountCircle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 41\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      value: this.props.formData.dateOfBirth,\n      required: true,\n      label: \"required\",\n      placeholder: \"Date of Birth\",\n      fullWidth: true,\n      onChange: e => this.updateData(e),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(CakeIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 41\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      value: this.props.formData.contactLanguage,\n      required: true,\n      label: \"required\",\n      id: \"standard-required\",\n      placeholder: \"Contact Language\",\n      fullWidth: true,\n      onChange: e => this.updateData(e),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(TranslateIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 41\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      value: this.props.formData.phone,\n      required: true,\n      label: \"required\",\n      id: \"standard-required\",\n      placeholder: \"Phone\",\n      fullWidth: true,\n      onChange: e => this.updateData(e),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(PhoneIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 41\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      value: this.props.formData.email,\n      required: true,\n      label: \"required\",\n      id: \"standard-required\",\n      placeholder: \"Email\",\n      fullWidth: true,\n      onChange: e => this.updateData(e),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(EmailIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 41\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleChange,\n      onSelect: this.handleSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 25\n      }\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n      label: \"required\",\n      required: true,\n      value: this.state.address ? this.state.address : this.props.formData.address,\n      id: \"standard-required\",\n      autoComplete: \"off\",\n      onChange: e => this.updateData(e),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(SearchIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 41\n          }\n        }))\n      },\n      placeholder: \"Address\",\n      fullWidth: true\n    }, getInputProps({\n      className: 'location-search-input'\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 33\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 45\n      }\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item';\n      const style = suggestion.active ? {\n        background: '#DFEDF0',\n        cursor: 'pointer'\n      } : {\n        background: 'white',\n        cursor: 'pointer'\n      };\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 41\n        }\n      }, suggestion.description));\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      value: this.props.formData.notesReason,\n      id: \"standard-textarea\",\n      placeholder: \"Notes/Reason\",\n      fullWidth: true,\n      onChange: e => this.updateData(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default withStyles(styles)(Card);","map":{"version":3,"sources":["C:/Users/danie/Documents/GitHub/mettleAI-Front-end-Interview/mettleAI-Front-end-Interview/src/components/Card.js"],"names":["React","Component","PlacesAutocomplete","geocodeByAddress","getLatLng","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","IconButton","TextField","InputAdornment","ExpandMoreIcon","DeleteIcon","AccountCircle","CakeIcon","TranslateIcon","PhoneIcon","EmailIcon","SearchIcon","withStyles","styles","root","paddingLeft","display","maxHeight","minHeight","content","margin","padding","expanded","marginTop","container","borderRadius","colours","Card","constructor","props","handleChange","address","temp","target","placeholder","value","updateData","setState","handleSelect","then","results","latLng","console","log","catch","error","onExpandChange","event","state","formData","document","getElementsByClassName","colour","style","borderBottomLeftRadius","autocomplete","data","firstName","lastName","dateOfBirth","contactLanguage","phone","email","notesReason","getDerivedStateFromProps","nextProps","prevState","e","field","replace","newData","possibilities","includes","key","Object","entries","toLowerCase","updateForms","test","render","classes","background","delete","stopPropagation","startAdornment","getInputProps","suggestions","getSuggestionItemProps","loading","width","height","className","map","suggestion","active","cursor","description"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport PlacesAutocomplete, {\r\n    geocodeByAddress,\r\n    getLatLng,\r\n  } from 'react-places-autocomplete';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport TranslateIcon from '@material-ui/icons/Translate';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n    root : {\r\n        paddingLeft: \"0px\",\r\n        display: \"flex\",\r\n        maxHeight: \"48px\",\r\n        minHeight: \"48px\",\r\n        \"&$expanded\": {\r\n            maxHeight: \"48px\",\r\n            minHeight: \"48px\",\r\n        }\r\n    },\r\n    content : {\r\n        margin: \"0px\",\r\n        padding: \"0px\",\r\n        minHeight: \"48px\"\r\n    },\r\n    expanded : {\r\n        marginTop: \"0px\",\r\n    },\r\n    container : {\r\n        margin: \"20px 0px 20px 0px\",\r\n        borderRadius : \"4px\"\r\n    }\r\n}\r\n\r\nconst colours = [\r\n    \"#25A575\",\r\n    \"#2595A5\",\r\n    \"#3A719B\",\r\n    \"#254B7A\",\r\n    \"#142B58\"\r\n]\r\n\r\nclass Card extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            autocomplete : [],\r\n            address : \"\",\r\n            data : {\r\n                firstName : \"\",\r\n                lastName : \"\",\r\n                dateOfBirth : \"\",\r\n                contactLanguage : \"\",\r\n                phone : \"\",\r\n                email : \"\",\r\n                address : \"\",\r\n                notesReason : \"\",\r\n            },\r\n        }\r\n    }\r\n\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        if(nextProps.formData !== prevState.data){\r\n          return { data: nextProps.formData, address : nextProps.formData.address};\r\n       }\r\n       else return null;\r\n    }\r\n\r\n\r\n    handleChange = address => {\r\n        var temp = {}\r\n        temp.target = {}\r\n        temp.target.placeholder = \"Address\"\r\n        temp.target.value = address\r\n\r\n        this.updateData(temp)\r\n\r\n        this.setState({ address : address});\r\n    };\r\n    handleSelect = address => {\r\n        geocodeByAddress(address)\r\n            .then(results => getLatLng(results[0]))\r\n            .then(latLng => console.log('Success', latLng))\r\n            .catch(error => console.error('Error', error));\r\n    };\r\n\r\n\r\n    updateData(e){\r\n        var field = e.target.placeholder.replace(/\\s/g, '')\r\n        var newData = e.target.value\r\n        var data = this.state.data\r\n        const possibilities = [\"FirstName\", \"LastName\", \"DateofBirth\", \"ContactLanguage\", \"Phone\", \"Email\", \"Address\", \"Notes/Reason\"]\r\n        //console.log(field)\r\n        console.log(data)\r\n        if (possibilities.includes(field)){\r\n            for (let [key, value] of Object.entries(data)) {\r\n                if (key.toLowerCase() == field.toLowerCase()){\r\n                    console.log(\"hi\")\r\n                    console.log(newData)\r\n                    data[key] = newData\r\n                }\r\n                if (field.toLowerCase() == \"notes/reason\"){\r\n                    data.notesReason = newData\r\n                }\r\n            }\r\n        }\r\n        //this.setState({data : data})\r\n        console.log(data)\r\n        this.props.updateForms(data, this.props.colour)\r\n    }\r\n\r\n    onExpandChange = (event, expanded) => {\r\n        this.setState({expanded : expanded})\r\n        console.log(this.state.formData.expanded)\r\n        if (expanded === true){\r\n            document.getElementsByClassName(\"panelcard-icon\")[this.props.colour].style.borderBottomLeftRadius = \"0px\";\r\n\r\n        }\r\n        else{\r\n            document.getElementsByClassName(\"panelcard-icon\")[this.props.colour].style.borderBottomLeftRadius = \"4px\";\r\n        }\r\n      }\r\n\r\n    test(e){\r\n        console.log(e.target)\r\n    }\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n            <ExpansionPanel\r\n            square={false}\r\n            className={classes.container}\r\n            defaultExpanded={this.props.formData.expanded}\r\n            onChange={this.onExpandChange}\r\n            >\r\n                <ExpansionPanelSummary\r\n                 expandIcon={<ExpandMoreIcon />}\r\n                 aria-controls=\"panel1a-content\"\r\n                 classes={{root : classes.root, content : classes.content, expanded : classes.expanded}}\r\n                >\r\n                    <div className=\"panelcard-icon\" style={{background : colours[this.props.colour]}}>\r\n                        {this.props.colour + 1}\r\n                    </div>\r\n                    <div className=\"panelcard-name\">{this.props.formData.firstName || this.props.formData.lastName ? this.props.formData.firstName + \" \" + this.props.formData.lastName : \"New Referral\"}</div>\r\n                    <div className=\"panelcard-filler\"></div>\r\n                    <div className=\"panelcard-trash\">\r\n                        <IconButton \r\n                            aria-label=\"delete\" \r\n                            colour={this.props.colour}\r\n                            onClick={() => this.props.delete(this.props.colour)}\r\n                            onFocus={(event) => event.stopPropagation()}\r\n                        >\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </div>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <form \r\n                    className=\"panelcard-form\"\r\n                    >\r\n                        <div className=\"panelcard-textfield-lg\">\r\n                            <div className=\"panelcard-textfield-sm\">\r\n                                <TextField\r\n                                required\r\n                                value={this.props.formData.firstName}\r\n                                label=\"required\"\r\n                                placeholder=\"First Name\"\r\n                                fullWidth\r\n                                onChange={(e) => this.updateData(e)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AccountCircle />\r\n                                    </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"panelcard-textfield-sm\">\r\n                                <TextField\r\n                                value={this.props.formData.lastName}\r\n                                required\r\n                                label=\"required\"\r\n                                placeholder=\"Last Name\"\r\n                                fullWidth\r\n                                onChange={(e) => this.updateData(e)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AccountCircle />\r\n                                    </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"panelcard-textfield-lg\">\r\n                            <div className=\"panelcard-textfield-sm\">\r\n                                <TextField\r\n                                value={this.props.formData.dateOfBirth}\r\n                                required\r\n                                label=\"required\"\r\n                                placeholder=\"Date of Birth\"\r\n                                fullWidth\r\n                                onChange={(e) => this.updateData(e)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <CakeIcon />\r\n                                    </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"panelcard-textfield-sm\">\r\n                                <TextField\r\n                                value={this.props.formData.contactLanguage}\r\n                                required\r\n                                label=\"required\"\r\n                                id=\"standard-required\"\r\n                                placeholder=\"Contact Language\"\r\n                                fullWidth\r\n                                onChange={(e) => this.updateData(e)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <TranslateIcon />\r\n                                    </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"panelcard-textfield-lg\">\r\n                            <div className=\"panelcard-textfield-sm\">\r\n                                <TextField\r\n                                value={this.props.formData.phone}\r\n                                required\r\n                                label=\"required\"\r\n                                id=\"standard-required\"\r\n                                placeholder=\"Phone\"\r\n                                fullWidth\r\n                                onChange={(e) => this.updateData(e)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <PhoneIcon />\r\n                                    </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"panelcard-textfield-sm\">\r\n                                <TextField\r\n                                value={this.props.formData.email}\r\n                                required\r\n                                label=\"required\"\r\n                                id=\"standard-required\"\r\n                                placeholder=\"Email\"\r\n                                fullWidth\r\n                                onChange={(e) => this.updateData(e)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <EmailIcon />\r\n                                    </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"panelcard-textfield-lg\">\r\n                        <PlacesAutocomplete\r\n                            value={this.state.address}\r\n                            onChange={this.handleChange}\r\n                            onSelect={this.handleSelect}\r\n                        >\r\n                            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                            <div style={{width : \"100%\", height : \"0px\"}}>\r\n                                <TextField\r\n                                label=\"required\"\r\n                                required\r\n                                value={this.state.address ? this.state.address : this.props.formData.address}\r\n                                id=\"standard-required\"\r\n                                autoComplete=\"off\"\r\n                                onChange={(e) => this.updateData(e)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <SearchIcon />\r\n                                    </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                placeholder=\"Address\"\r\n                                fullWidth\r\n                                {...getInputProps({\r\n                                    className: 'location-search-input',\r\n                                })}\r\n                                />\r\n                                <div className=\"autocomplete-dropdown-container\">\r\n                                {loading && <div>Loading...</div>}\r\n                                {suggestions.map(suggestion => {\r\n                                    const className = suggestion.active\r\n                                    ? 'suggestion-item--active'\r\n                                    : 'suggestion-item';\r\n\r\n                                    const style = suggestion.active\r\n                                    ? { background: '#DFEDF0', cursor: 'pointer' }\r\n                                    : { background: 'white', cursor: 'pointer' };\r\n                                    return (\r\n                                    <div\r\n                                        {...getSuggestionItemProps(suggestion, {\r\n                                        className,\r\n                                        style,\r\n                                        })}\r\n                                    >\r\n                                        <span>{suggestion.description}</span>\r\n                                    </div>\r\n                                    );\r\n                                })}\r\n                                </div>\r\n                            </div>\r\n                            )}\r\n                        </PlacesAutocomplete>\r\n                        </div> \r\n                        <div className=\"panelcard-textfield-lg\">\r\n                            <TextField\r\n                            value={this.props.formData.notesReason}\r\n                            id=\"standard-textarea\"\r\n                            placeholder=\"Notes/Reason\"\r\n                            fullWidth\r\n                            onChange={(e) => this.updateData(e)}\r\n                            />\r\n\r\n                        </div>\r\n                    </form>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Card);"]},"metadata":{},"sourceType":"module"}