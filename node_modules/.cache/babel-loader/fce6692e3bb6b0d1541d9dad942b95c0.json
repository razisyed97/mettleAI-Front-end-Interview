{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\OneDrive\\\\Documents\\\\GitHub\\\\mettleAi\\\\mettleAI-Front-end-Interview\\\\src\\\\components\\\\Card.js\";\nimport React, { Component } from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport CakeIcon from '@material-ui/icons/Cake';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport EmailIcon from '@material-ui/icons/Email';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { withStyles } from '@material-ui/core/styles';\nconst styles = {\n  root: {\n    paddingLeft: \"0px\",\n    display: \"flex\",\n    maxHeight: \"48px\",\n    minHeight: \"48px\",\n    \"&$expanded\": {\n      maxHeight: \"48px\",\n      minHeight: \"48px\"\n    }\n  },\n  content: {\n    margin: \"0px\",\n    padding: \"0px\",\n    minHeight: \"48px\"\n  },\n  expanded: {\n    marginTop: \"0px\"\n  },\n  container: {\n    margin: \"20px 0px 20px 0px\",\n    borderRadius: \"4px\"\n  }\n};\nconst colours = [\"#25A575\", \"#2595A5\", \"#3A719B\", \"#254B7A\", \"#142B58\"];\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = address => {\n      this.setState({\n        address\n      });\n    };\n\n    this.handleSelect = address => {\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => console.log('Success', latLng)).catch(error => console.error('Error', error));\n    };\n\n    this.state = {\n      autocomplete: [],\n      address: \"\",\n      data: {\n        firstName: \"\",\n        lastName: \"\",\n        dateOfBirth: \"\",\n        contactLangauge: \"\",\n        phone: \"\",\n        email: \"\",\n        address: \"\",\n        notesReason: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.colour);\n  }\n\n  updateData(e) {\n    const field = e.target.placeholder; //console.log(e.target.value)\n\n    var data = this.state.data;\n    const possibilities = [\"FirstName\", \"LastName\", \"DateofBirth\", \"ContactLanguage\", \"Phone\", \"Email\", \"Address\", \"Notes/Reason\"];\n    field = field.replace(/\\s/g, '');\n\n    if (possibilities.includes(field)) {\n      for (let [key, value] of Object.entries(data)) {\n        console.log(key.toString().toLowerCase(), field.toLowerCase());\n\n        if (key.toString().toLowerCase() == field.toLowerCase()) {\n          console.log(\"hi\");\n          data.key = data;\n        }\n\n        if (field.toLowerCase() == \"notes/reason\") {\n          data.notesReason = data;\n        }\n      }\n    }\n\n    console.log(data);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(ExpansionPanel, {\n      square: false,\n      className: classes.container,\n      defaultExpanded: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ExpansionPanelSummary, {\n      expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 30\n        }\n      }),\n      \"aria-controls\": \"panel1a-content\",\n      classes: {\n        root: classes.root,\n        content: classes.content,\n        expanded: classes.expanded\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-icon\",\n      style: {\n        background: colours[this.props.colour]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, this.props.colour + 1), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, \"Hello\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-filler\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"delete\",\n      colour: this.props.colour,\n      onClick: () => this.props.delete(this.props.colour),\n      onFocus: event => event.stopPropagation(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(ExpansionPanelDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"panelcard-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      color: \"primary\",\n      required: true,\n      label: \"required\",\n      placeholder: \"First Name\",\n      fullWidth: true,\n      onChange: e => this.updateData(e),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(AccountCircle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 41\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"standard-required\",\n      label: \"required\",\n      placeholder: \"Last Name\",\n      fullWidth: true,\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(AccountCircle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 41\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      label: \"required\",\n      id: \"standard-required\",\n      placeholder: \"Date of Birth\",\n      fullWidth: true,\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(CakeIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 41\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      label: \"required\",\n      id: \"standard-required\",\n      placeholder: \"Contact Language\",\n      fullWidth: true,\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(TranslateIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 41\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      label: \"required\",\n      id: \"standard-required\",\n      placeholder: \"Phone\",\n      fullWidth: true,\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(PhoneIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 41\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      label: \"required\",\n      id: \"standard-required\",\n      placeholder: \"Email\",\n      fullWidth: true,\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(EmailIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 41\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleChange,\n      onSelect: this.handleSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n      label: \"required\",\n      required: true,\n      id: \"standard-required\",\n      autoComplete: \"off\",\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(SearchIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 41\n          }\n        }))\n      },\n      placeholder: \"Address\",\n      fullWidth: true\n    }, getInputProps({\n      className: 'location-search-input'\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 33\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 45\n      }\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item';\n      const style = suggestion.active ? {\n        background: '#DFEDF0',\n        cursor: 'pointer'\n      } : {\n        background: 'white',\n        cursor: 'pointer'\n      };\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 41\n        }\n      }, suggestion.description));\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panelcard-textfield-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      freeSolo: true,\n      id: \"free-solo-2-demo\",\n      disableClearable: true,\n      options: this.state.autocomplete.map(option => option),\n      fullWidth: true,\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        id: \"standard-textarea\",\n        placeholder: \"Notes/Reason\",\n        fullWidth: true,\n        onChange: e => this.test(e),\n        InputProps: { ...params.InputProps,\n          type: 'search'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 29\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 25\n      }\n    })))));\n  }\n\n}\n\nexport default withStyles(styles)(Card);","map":{"version":3,"sources":["C:/Users/danie/OneDrive/Documents/GitHub/mettleAi/mettleAI-Front-end-Interview/src/components/Card.js"],"names":["React","Component","PlacesAutocomplete","geocodeByAddress","getLatLng","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","IconButton","TextField","InputAdornment","Autocomplete","ExpandMoreIcon","DeleteIcon","AccountCircle","CakeIcon","TranslateIcon","PhoneIcon","EmailIcon","SearchIcon","withStyles","styles","root","paddingLeft","display","maxHeight","minHeight","content","margin","padding","expanded","marginTop","container","borderRadius","colours","Card","constructor","props","handleChange","address","setState","handleSelect","then","results","latLng","console","log","catch","error","state","autocomplete","data","firstName","lastName","dateOfBirth","contactLangauge","phone","email","notesReason","componentDidMount","colour","updateData","e","field","target","placeholder","possibilities","replace","includes","key","value","Object","entries","toString","toLowerCase","render","classes","background","delete","event","stopPropagation","startAdornment","getInputProps","suggestions","getSuggestionItemProps","loading","width","height","className","map","suggestion","active","style","cursor","description","option","params","test","InputProps","type"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport PlacesAutocomplete, {\r\n    geocodeByAddress,\r\n    getLatLng,\r\n  } from 'react-places-autocomplete';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport TranslateIcon from '@material-ui/icons/Translate';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n    root : {\r\n        paddingLeft: \"0px\",\r\n        display: \"flex\",\r\n        maxHeight: \"48px\",\r\n        minHeight: \"48px\",\r\n        \"&$expanded\": {\r\n            maxHeight: \"48px\",\r\n            minHeight: \"48px\",\r\n        }\r\n    },\r\n    content : {\r\n        margin: \"0px\",\r\n        padding: \"0px\",\r\n        minHeight: \"48px\"\r\n    },\r\n    expanded : {\r\n        marginTop: \"0px\",\r\n    },\r\n    container : {\r\n        margin: \"20px 0px 20px 0px\",\r\n        borderRadius : \"4px\"\r\n    }\r\n}\r\n\r\nconst colours = [\r\n    \"#25A575\",\r\n    \"#2595A5\",\r\n    \"#3A719B\",\r\n    \"#254B7A\",\r\n    \"#142B58\"\r\n]\r\n\r\nclass Card extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            autocomplete : [],\r\n            address : \"\",\r\n            data : {\r\n                firstName : \"\",\r\n                lastName : \"\",\r\n                dateOfBirth : \"\",\r\n                contactLangauge : \"\",\r\n                phone : \"\",\r\n                email : \"\",\r\n                address : \"\",\r\n                notesReason : \"\"\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        console.log(this.props.colour)\r\n    }\r\n    handleChange = address => {\r\n        this.setState({ address });\r\n    };\r\n    handleSelect = address => {\r\n        geocodeByAddress(address)\r\n            .then(results => getLatLng(results[0]))\r\n            .then(latLng => console.log('Success', latLng))\r\n            .catch(error => console.error('Error', error));\r\n    };\r\n\r\n\r\n    updateData(e){\r\n        const field = e.target.placeholder\r\n        //console.log(e.target.value)\r\n        var data = this.state.data\r\n        const possibilities = [\"FirstName\", \"LastName\", \"DateofBirth\", \"ContactLanguage\", \"Phone\", \"Email\", \"Address\", \"Notes/Reason\"]\r\n        field = field.replace(/\\s/g, '')\r\n        if (possibilities.includes(field)){\r\n            for (let [key, value] of Object.entries(data)) {\r\n                console.log(key.toString().toLowerCase() , field.toLowerCase())\r\n                if (key.toString().toLowerCase() == field.toLowerCase()){\r\n                    console.log(\"hi\")\r\n                    data.key = data\r\n                }\r\n                if (field.toLowerCase() == \"notes/reason\"){\r\n                    data.notesReason = data\r\n                }\r\n              }\r\n        }\r\n        console.log(data)\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n            <ExpansionPanel\r\n            square={false}\r\n            className={classes.container}\r\n            defaultExpanded={true}\r\n            >\r\n                <ExpansionPanelSummary\r\n                 expandIcon={<ExpandMoreIcon />}\r\n                 aria-controls=\"panel1a-content\"\r\n                 classes={{root : classes.root, content : classes.content, expanded : classes.expanded}}\r\n                >\r\n                    <div className=\"panelcard-icon\" style={{background : colours[this.props.colour]}}>\r\n                        {this.props.colour + 1}\r\n                    </div>\r\n                    <div className=\"panelcard-name\">Hello</div>\r\n                    <div className=\"panelcard-filler\"></div>\r\n                    <div className=\"panelcard-trash\">\r\n                        <IconButton \r\n                            aria-label=\"delete\" \r\n                            colour={this.props.colour}\r\n                            onClick={() => this.props.delete(this.props.colour)}\r\n                            onFocus={(event) => event.stopPropagation()}\r\n                        >\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </div>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <form \r\n                    className=\"panelcard-form\"\r\n                    >\r\n                        <div className=\"panelcard-textfield-lg\">\r\n                            <div className=\"panelcard-textfield-sm\">\r\n                                <TextField\r\n                                color=\"primary\"\r\n                                required\r\n                                label=\"required\"\r\n                                placeholder=\"First Name\"\r\n                                fullWidth\r\n                                onChange={(e) => this.updateData(e)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AccountCircle />\r\n                                    </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"panelcard-textfield-sm\">\r\n                                <TextField\r\n                                required\r\n                                id=\"standard-required\"\r\n                                label=\"required\"\r\n                                placeholder=\"Last Name\"\r\n                                fullWidth\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AccountCircle />\r\n                                    </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"panelcard-textfield-lg\">\r\n                            <div className=\"panelcard-textfield-sm\">\r\n                                <TextField\r\n                                required\r\n                                label=\"required\"\r\n                                id=\"standard-required\"\r\n                                placeholder=\"Date of Birth\"\r\n                                fullWidth\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <CakeIcon />\r\n                                    </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"panelcard-textfield-sm\">\r\n                                <TextField\r\n                                required\r\n                                label=\"required\"\r\n                                id=\"standard-required\"\r\n                                placeholder=\"Contact Language\"\r\n                                fullWidth\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <TranslateIcon />\r\n                                    </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"panelcard-textfield-lg\">\r\n                            <div className=\"panelcard-textfield-sm\">\r\n                                <TextField\r\n                                required\r\n                                label=\"required\"\r\n                                id=\"standard-required\"\r\n                                placeholder=\"Phone\"\r\n                                fullWidth\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <PhoneIcon />\r\n                                    </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"panelcard-textfield-sm\">\r\n                                <TextField\r\n                                required\r\n                                label=\"required\"\r\n                                id=\"standard-required\"\r\n                                placeholder=\"Email\"\r\n                                fullWidth\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <EmailIcon />\r\n                                    </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"panelcard-textfield-lg\">\r\n                        <PlacesAutocomplete\r\n                            value={this.state.address}\r\n                            onChange={this.handleChange}\r\n                            onSelect={this.handleSelect}\r\n                        >\r\n                            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                            <div style={{width : \"100%\", height : \"0px\"}}>\r\n                                <TextField\r\n                                label=\"required\"\r\n                                required\r\n                                id=\"standard-required\"\r\n                                autoComplete=\"off\"\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <SearchIcon />\r\n                                    </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                placeholder=\"Address\"\r\n                                fullWidth\r\n                                {...getInputProps({\r\n                                    className: 'location-search-input',\r\n                                })}\r\n                                />\r\n                                <div className=\"autocomplete-dropdown-container\">\r\n                                {loading && <div>Loading...</div>}\r\n                                {suggestions.map(suggestion => {\r\n                                    const className = suggestion.active\r\n                                    ? 'suggestion-item--active'\r\n                                    : 'suggestion-item';\r\n\r\n                                    const style = suggestion.active\r\n                                    ? { background: '#DFEDF0', cursor: 'pointer' }\r\n                                    : { background: 'white', cursor: 'pointer' };\r\n                                    return (\r\n                                    <div\r\n                                        {...getSuggestionItemProps(suggestion, {\r\n                                        className,\r\n                                        style,\r\n                                        })}\r\n                                    >\r\n                                        <span>{suggestion.description}</span>\r\n                                    </div>\r\n                                    );\r\n                                })}\r\n                                </div>\r\n                            </div>\r\n                            )}\r\n                        </PlacesAutocomplete>\r\n                            {/*\r\n                            <TextField\r\n                            label=\"required\"\r\n                            required\r\n                            id=\"standard-required\"\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <SearchIcon />\r\n                                </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            placeholder=\"Address\"\r\n                            fullWidth\r\n                        />*/}\r\n                        </div> \r\n                        <div className=\"panelcard-textfield-lg\">\r\n                        <Autocomplete\r\n                        freeSolo\r\n                        id=\"free-solo-2-demo\"\r\n                        disableClearable\r\n                        options={this.state.autocomplete.map((option) => option)}\r\n                        fullWidth\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                            {...params}\r\n                            id=\"standard-textarea\"\r\n                            placeholder=\"Notes/Reason\"\r\n                            fullWidth\r\n                            onChange={(e) => this.test(e)}\r\n                            InputProps={{ ...params.InputProps, type: 'search' }}\r\n                            />\r\n                        )}\r\n                        />\r\n                        </div>\r\n                    </form>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Card);"]},"metadata":{},"sourceType":"module"}